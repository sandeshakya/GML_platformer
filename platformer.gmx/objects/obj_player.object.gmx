<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize variables

//jump speeds
jump_speed_normal = 7;
jump_speed_pwr = 10;
jumps_max = 2;

grav = 0.2;
hsp = 0;
vsp = 0;
jump_speed = jump_speed_normal;
move_speed = 5;
terminal_g = 10;
jumps = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump_speed = jump_speed_normal;
sprite_index = spr_player;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//player's input
key_right = keyboard_check(ord("D")) || keyboard_check(vk_right);
key_left = keyboard_check(ord("A")) || keyboard_check(vk_left);
key_up = keyboard_check_pressed(ord("W")) || keyboard_check_pressed(vk_up);

//react to inputs
move = key_right + -(key_left);
hsp= move * move_speed;

//if player in on the ground
if(place_meeting(x, y + 1, obj_wall))
{
    vsp = 0;
    //reset jumps to max number of jumps
    jumps = jumps_max;
}
else
//if player is in the air
{
    //player affected by gravity. Set Terminal velocity
    vsp = min(vsp + grav, terminal_g);
    
    //if player did not use jump to be in air, reduce max number of jumps by 1
    if(jumps == jumps_max)
        jumps = jumps_max - 1;
}

//check if jump is available, jump, reduce jumps by 1
if(key_up &amp;&amp; (jumps &gt; 0))
{
    vsp =  -jump_speed;
    jumps -=1;
}

//horizontal collision 
if(place_meeting(x + hsp, y, obj_wall))
{
    //whle person has not met the wall, keep moving towards it
   while(!(place_meeting(x + sign(hsp), y, obj_wall)))
    x += sign(hsp);
   hsp = 0;
}

//vertical collision
if(place_meeting(x, y + vsp, obj_wall))
{
    //whle person has not met the floor, keep moving towards it
   while(!(place_meeting(x, y + sign(vsp), obj_wall)))
    y += sign(vsp);
   vsp = 0;
}


//Wall Logic
if(place_meeting(x+move, y, obj_wall) &amp;&amp; vsp &gt; 0)
{
    vsp = terminal_g/5;
    
    //wall jump
    if(key_up)
    {
        vsp = -jump_speed;   
    }
}


x += hsp;
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_pwr_jmp">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump_speed = jump_speed_pwr;
sprite_index = spr_player_pwr_jmp;
alarm[0] = 300;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
